#!/bin/bash

# zss interface

case $1 in
  "app")
    PROJECTNAME=docker-apps
    APPNAME=jupyterlab
    APPVERSION=0.3.0
    ;;
  "config")
    CONFIGKEYS="port image tf_ver keras_ver"
    declare -A CONFIG_DESCRIPTIONS
    CONFIG_DESCRIPTIONS=( \
      ["port"]="The port to expose." \
      ["image"]="The docker image name to build." \
      ["tf_ver"]="The tensorflow version to use." \
      ["keras_ver"]="The keras version to use." \
      )

    DEFAULT_PORT=8888
    DEFAULT_IMAGE=${APPNAME}:$(date +%Y%m%d)
    DEFAULT_TF_VER=1.5.0
    DEFAULT_KERAS_VER=2.1.6
    ;;
  "vars")
    ;;
  "requirement")
    echo - docker: $(which docker)
    ;;
  "secret-create")
    ;;
  "state-data-save")
    mv -f ${STORE}/data/${STATENAME}-${APPNAME}-data.tgz.enc ${STORE}/data/${STATENAME}-bak-${APPNAME}-data.tgz.enc 2>/dev/null
    cd ${STORE}/docker
    tar -zc . | gpg -ear ${GPGKEY} -o ${STORE}/data/${STATENAME}-${APPNAME}-data.tgz.enc
    cd - &> /dev/null
    ;;
  "state-secret-load-post")
    ;;
  "state-data-load")
    if [ -e ${STORE}/data/${STATENAME}-${APPNAME}-data.tgz.enc ]
    then
      mkdir -p ${STORE}/docker
      cd ${STORE}/docker
      gpg -d ${STORE}/data/${STATENAME}-${APPNAME}-data.tgz.enc | tar xz
      echo ${STATENAME} > ${CONFIG}/base_data
      cd - &> /dev/null
    fi
    ;;
  # AppImplementing Section: commands
  #------------------------------------------------------------------------------
  "command")
    shift
    case $1 in
    "app")
      shift
      case $1 in
        "up")
          sudo mkdir -p ${STORE}/docker/home
          sudo chown 1000:100 ${STORE}/docker/home
          docker build -t ${IMAGE} --build-arg TF_VER=${TF_VER} --build-arg KERAS_VER=${KERAS_VER} -f Dockerfile .
          docker run -d --name ${APPNAME} \
            --restart=always \
            -p 127.0.0.1:${PORT}:8888 \
            -v ${STORE}/docker/notes:/home/me/notes \
            -v ${PWD}/kernel/dotnet-csharp/kernel.json:/home/me/.local/share/jupyter/kernels/.net-csharp/kernel.json \
            -v ${PWD}/kernel/dotnet-fsharp/kernel.json:/home/me/.local/share/jupyter/kernels/.net-fsharp/kernel.json \
            ${IMAGE}
          ;;
        "down")
          docker stop ${APPNAME}
          docker rm ${APPNAME}
          ;;
      esac
      ;;
    "secret")
      shift
      case $1 in
        "token")
          docker exec ${APPNAME} \
            cat /home/me/.local/share/jupyter/runtime/nbserver-1-open.html | \
            grep 'here to go' | cut -d\" -f2 | cut -d= -f2
          ;;
        "kaggle")
          docker exec ${APPNAME} /bin/bash -c "mkdir /home/me/.kaggle"
          (docker exec -i ${APPNAME} /bin/bash -c "cat > /home/me/.kaggle/kaggle.json") < ~/.kaggle/kaggle.json
          docker exec ${APPNAME} /bin/bash -c "chmod 600 /home/me/.kaggle/kaggle.json"
          ;;
        "git")
          (docker exec -i ${APPNAME} /bin/bash -c "cat > ~/.git-credentials") < ~/.git-credentials
          ;;
      esac
      ;;
    esac
    ;;
  #------------------------------------------------------------------------------
  "usage")
    echo $(basename $0) "app [up/down/token]"
    echo $(basename $0) "secret [token/kaggle/git]"
    ;;
esac

