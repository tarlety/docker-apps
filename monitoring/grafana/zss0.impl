#!/bin/bash

# zss interface

case $1 in
	"app")
		PROJECTNAME=docker-apps
		APPNAME=grafana
		APPVERSION=0.3.1
		;;
	"config")
		CONFIGKEYS="image image_renderer"
		declare -A CONFIG_DESCRIPTIONS
		CONFIG_DESCRIPTIONS=( \
			["image"]="The docker image to download." \
			["image_renderer"]="The grafana image renderer to download." \
			)

		DEFAULT_IMAGE=grafana/grafana:7.0.6
		DEFAULT_IMAGE_RENDERER=grafana/grafana-image-renderer:2.0.0
		;;
	"vars")
		;;
	"requirement")
		echo - docker: $(which docker)
		;;
	"secret-create")
		;;
	"state-data-save")
		mv -f ${STORE}/data/${STATENAME}-${APPNAME}-data.tgz.enc ${STORE}/data/${STATENAME}-bak-${APPNAME}-data.tgz.enc 2>/dev/null
		cd ${STORE}/docker
		tar -zc . | gpg -ear ${GPGKEY} -o ${STORE}/data/${STATENAME}-${APPNAME}-data.tgz.enc
		cd - &> /dev/null
		;;
	"state-secret-load-post")
		;;
	"state-data-load")
		if [ -e ${STORE}/data/${STATENAME}-${APPNAME}-data.tgz.enc ]
		then
			mkdir -p ${STORE}/docker
			cd ${STORE}/docker
			gpg -d ${STORE}/data/${STATENAME}-${APPNAME}-data.tgz.enc | tar xz
			echo ${STATENAME} > ${CONFIG}/base_data
			cd - &> /dev/null
		fi
		;;
	# AppImplementing Section: commands
	#------------------------------------------------------------------------------
	"command")
		shift
		case $1 in
		"app")
			shift
			case $1 in
				"up")
          docker run -d --name ${APPNAME}-image-renderer \
            --restart=always \
            --network=host \
            -e ENABLE_METRICS="true" \
            ${IMAGE_RENDERER}
					sudo mkdir -p ${STORE}/docker/grafana
					sudo chown 472:472 ${STORE}/docker/grafana
					docker run -d --name ${APPNAME} \
						--restart=always \
						--network=host \
            -e GF_RENDERING_SERVER_URL="http://localhost:8081/render" \
            -e GF_RENDERING_CALLBACK_URL="http://localhost:3000/" \
						-v ${STORE}/docker/grafana:/var/lib/grafana \
						${IMAGE}
					;;
				"down")
					docker stop ${APPNAME} ${APPNAME}-image-renderer
					docker rm ${APPNAME} ${APPNAME}-image-renderer
					;;
			esac
			;;
		esac
		;;
	#------------------------------------------------------------------------------
	"usage")
		echo $(basename $0) "app [up/down]"
		;;
esac

